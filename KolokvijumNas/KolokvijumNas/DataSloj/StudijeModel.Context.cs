//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KolokvijumNas.DataSloj
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class StudijeEntities : DbContext
    {
        public StudijeEntities()
            : base("name=StudijeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Ispit> Ispits { get; set; }
        public DbSet<IspitniRok> IspitniRoks { get; set; }
        public DbSet<Predmet> Predmets { get; set; }
        public DbSet<Student> Students { get; set; }
        public DbSet<StudentIspit> StudentIspits { get; set; }
    
        public virtual int PredmetDelete(Nullable<int> idPredmet)
        {
            var idPredmetParameter = idPredmet.HasValue ?
                new ObjectParameter("idPredmet", idPredmet) :
                new ObjectParameter("idPredmet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PredmetDelete", idPredmetParameter);
        }
    
        public virtual int StudentDelete(Nullable<int> idStudent)
        {
            var idStudentParameter = idStudent.HasValue ?
                new ObjectParameter("idStudent", idStudent) :
                new ObjectParameter("idStudent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentDelete", idStudentParameter);
        }
    
        public virtual int StudentInsert(string ime, string prezime, Nullable<int> indeksBroj, Nullable<int> indeksGodina, ObjectParameter idStudent)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var indeksBrojParameter = indeksBroj.HasValue ?
                new ObjectParameter("indeksBroj", indeksBroj) :
                new ObjectParameter("indeksBroj", typeof(int));
    
            var indeksGodinaParameter = indeksGodina.HasValue ?
                new ObjectParameter("indeksGodina", indeksGodina) :
                new ObjectParameter("indeksGodina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentInsert", imeParameter, prezimeParameter, indeksBrojParameter, indeksGodinaParameter, idStudent);
        }
    
        public virtual int StudentUpdate(Nullable<int> idStudent, string ime, string prezime, Nullable<int> indeksBroj, Nullable<int> indeksGodina, Nullable<int> idKorisnik, ObjectParameter error)
        {
            var idStudentParameter = idStudent.HasValue ?
                new ObjectParameter("idStudent", idStudent) :
                new ObjectParameter("idStudent", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var indeksBrojParameter = indeksBroj.HasValue ?
                new ObjectParameter("indeksBroj", indeksBroj) :
                new ObjectParameter("indeksBroj", typeof(int));
    
            var indeksGodinaParameter = indeksGodina.HasValue ?
                new ObjectParameter("indeksGodina", indeksGodina) :
                new ObjectParameter("indeksGodina", typeof(int));
    
            var idKorisnikParameter = idKorisnik.HasValue ?
                new ObjectParameter("idKorisnik", idKorisnik) :
                new ObjectParameter("idKorisnik", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentUpdate", idStudentParameter, imeParameter, prezimeParameter, indeksBrojParameter, indeksGodinaParameter, idKorisnikParameter, error);
        }
    }
}
